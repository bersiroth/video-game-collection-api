### Login
POST http://localhost:80/api/login
Content-Type: application/json

{
  "username": "user@email.fr",
  "password": "password"
}

> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(typeof response.body.token === "string", "Token is not a string");
    });
    client.global.set("auth_token", response.body.token);
%}

### Login with last registered user
POST http://localhost:80/api/login
Content-Type: application/json

{
  "username": "{{email}}",
  "password": "{{password}}"
}

> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(typeof response.body.token === "string", "Token is not a string");
    });
    client.global.set("auth_token", response.body.token);
%}

### Login with bad credentials
POST http://localhost:80/api/login
Content-Type: application/json

{
  "username": "test@email.fr",
  "password": "password"
}

> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 401, "Response status is not 401");
        client.assert(response.body.message === "Invalid credentials.");
    });
%}

### Login with bad credentials key
POST http://localhost:80/api/login
Content-Type: application/json

{
  "email": "test@email.fr",
  "password": "password"
}

> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 400, "Response status is not 400");
        client.assert(response.body.message === "The key \"username\" must be provided.");
    });
%}